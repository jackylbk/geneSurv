hc_plotOptions(line = list(tooltip = list(pointFormat = "<b>{series.name}: </b>{point.y:.3f} ")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
time
get.event.info <- function(obj, subset = NULL) {
if (grepl("surv", obj$family)) {
if (!is.null(obj$yvar)) {
if (is.null(subset)) {
subset <- (1:nrow(cbind(obj$yvar)))
}
r.dim <- 2
time <- obj$yvar[subset, 1]
cens <- obj$yvar[subset, 2]
if (!all(floor(cens) == abs(cens), na.rm = TRUE)) {
stop("for survival families censoring variable must be coded as a non-negative integer")
}
event <- na.omit(cens)[na.omit(cens) > 0]
event.type <- sort(unique(event))
}
else {
r.dim <- 0
event <- event.type <- cens <- cens <- time <- NULL
}
time.interest <- obj$time.interest
}
else {
if ((obj$family == "regr+") | (obj$family == "class+")) {
r.dim <- dim(obj$yvar)[2]
}
else {
r.dim <- 1
}
event <- event.type <- cens <- time.interest <- cens <- time <- NULL
}
return(list(event = event, event.type = event.type, cens = cens,
time.interest = time.interest, time = time, r.dim = r.dim))
}
event.info <- get.event.info(v.obj)
km.obj <- matrix(unlist(mclapply(1:length(event.info$time.interest),
function(j) {
c(sum(event.info$time >= event.info$time.interest[j],
na.rm = TRUE), sum(event.info$time[event.info$cens !=
0] == event.info$time.interest[j], na.rm = TRUE))
})), ncol = 2, byrow = TRUE)
Y <- km.obj[, 1]
r <- d/(Y + 1 * (Y == 0))
surv.aalen <- exp(-cumsum(r))
time = event.info$time.interest
time
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFPlot") %>%
hc_add_series(name = "Survival", type = "line", data = surv.aalen, showInLegend = FALSE, zIndex = 1, marker = list(lineColor = "black", lineWidth = 1), lineWidth = 0, id = "survival") %>%
hc_chart(zoomType = "xy", inverted = TRUE) %>%
hc_xAxis(categories = as.character(time), title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival")) %>%
#hc_plotOptions(tooltip = list(headerFormat = "<b>Time: </b>{point.x}")) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b>{series.name}: </b>{point.y:.3f} ")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
as.character(time)
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFPlot") %>%
hc_add_series(name = "Survival", type = "line", data = surv.aalen, showInLegend = FALSE, zIndex = 1, marker = list(lineColor = "black", lineWidth = 1), lineWidth = 0, id = "survival") %>%
hc_chart(zoomType = "xy", inverted = TRUE) %>%
hc_xAxis(categories = time, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival")) %>%
#hc_plotOptions(tooltip = list(headerFormat = "<b>Time: </b>{point.x}")) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b>{series.name}: </b>{point.y:.3f} ")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
surv.aalen
time
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFPlot") %>%
hc_add_series(name = "Survival", type = "line", data = surv.aalen, showInLegend = FALSE, zIndex = 1, marker = list(lineColor = "black", lineWidth = 1), lineWidth = 0, id = "survival") %>%
hc_chart(zoomType = "xy", inverted = TRUE) %>%
hc_xAxis(categories = as.character(time), title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival")) %>%
#hc_plotOptions(tooltip = list(headerFormat = "<b>Time: </b>{point.x}")) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b>{series.name}: </b>{point.y:.3f} ")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFPlot") %>%
hc_add_series(name = "Survival", type = "line", data = surv.aalen, showInLegend = FALSE, zIndex = 1, marker = list(lineColor = "black", lineWidth = 1), lineWidth = 0, id = "survival")
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFPlot") %>%
hc_add_series(name = "Survival", type = "line", data = surv.aalen, showInLegend = FALSE, zIndex = 1, marker = list(lineColor = "black", lineWidth = 1), lineWidth = 0, id = "survival") %>%
hc_chart(zoomType = "xy", inverted = TRUE) %>%
hc_xAxis(categories = as.character(time), title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival")) %>%
#hc_plotOptions(tooltip = list(headerFormat = "<b>Time: </b>{point.x}")) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b>{series.name}: </b>{point.y:.3f} ")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFPlot") %>%
hc_add_series(name = "Survival", type = "line", data = surv.aalen, showInLegend = FALSE, zIndex = 1, marker = list(lineColor = "black", lineWidth = 1), lineWidth = 0, id = "survival") %>%
hc_chart(zoomType = "xy", inverted = TRUE) %>%
hc_xAxis(categories = time, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival")) %>%
#hc_plotOptions(tooltip = list(headerFormat = "<b>Time: </b>{point.x}")) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b>{series.name}: </b>{point.y:.3f} ")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
v.obj$forest$coerce.factor$xvar.names
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFPlot") %>%
hc_add_series(name = "Survival", type = "line", data = surv.aalen, showInLegend = FALSE, zIndex = 1, marker = list(lineColor = "black", lineWidth = 1), lineWidth = 0, id = "survival") %>%
hc_chart(zoomType = "xy", inverted = TRUE) %>%
hc_xAxis(data = time, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival")) %>%
#hc_plotOptions(tooltip = list(headerFormat = "<b>Time: </b>{point.x}")) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b>{series.name}: </b>{point.y:.3f} ")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survListNA = list(data = as.matrix(cbind(time, surv.aalen), name = "Nelson-Aalen Estimator", type = "line")
survListNA = list(data = as.matrix(cbind(time, surv.aalen), name = "Nelson-Aalen Estimator", type = "line"))
survListNA
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListNA) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListNA)
survListNA = data = as.matrix(cbind(time, surv.aalen), name = "Nelson-Aalen Estimator", type = "line")
survListNA
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(data =survListNA) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survListNA = list(data = as.matrix(cbind(time, surv.aalen), name = "Nelson-Aalen Estimator", type = "line"))
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListNA) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
names(survListNA) = NULL
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListNA) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survListNA
survNA = data.frame(t(surv.aalen))
survNA
survListNA = list(data = as.matrix(cbind(time, survNA), name = "Nelson-Aalen Estimator", type = "line"))
names(survListNA) = NULL
survListNA
surv.aalen <- exp(-cumsum(r))
time = event.info$time.interest
survListNA = list(data = as.matrix(cbind(time, surv.aalen), name = "Nelson-Aalen Estimator", type = "line"))
names(survListNA) = NULL
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListNA) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survListNA
names(survListNA)
survListNA = list(data = as.matrix(cbind(time, surv.aalen), name = "Nelson-Aalen Estimator", type = "line"))
names(survListNA)
names(survListNA) = NULL
survListNA
survListNA[[1]]
survListNA
names(survListNA) = NULL
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListNA) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survOob = data.frame(t(v.obj$survival.oob))
survOob
survListOob = list()
for(i in 1:ncol(survOob)){
survListOob[[i]] = list(data = as.matrix(cbind(randomForestSurvival()$time.interest, survOob[,i])), name = paste0("Survival (obs", i, ")"), type = "line")
}
for(i in 1:ncol(survOob)){
survListOob[[i]] = list(data = as.matrix(cbind(v.obj$time.interest, survOob[,i])), name = paste0("Survival (obs", i, ")"), type = "line")
}
names(survListOob) = NULL
survListOob
survListNA
survOob[,i]
surv.aalen
survListNA[[1]] = list(data = as.matrix(cbind(time.interest, surv.aalen)), name = paste0("Survival (obs", 1, ")"), type = "line")
survListNA[[1]] = list(data = as.matrix(cbind(time, surv.aalen)), name = paste0("Survival (obs", 1, ")"), type = "line")
survListNA
survListNA[[1]] = list(data = as.matrix(cbind(time, surv.aalen)), name = "Nelson-Aalen Estimator", type = "line")
survListNA
survListNA = list(data = as.matrix(cbind(time, surv.aalen)), name = "Nelson-Aalen Estimator", type = "line")
survListNA
names(survListNA) = NULL
survListNA
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListNA) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survListOob
names(survListOob) = NULL
indx = 1:ncol(survOob)
indx
survListOob =  survListOob[indx]
legend = if(input$selectObsSurvOOB == 1){FALSE}else{TRUE}
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival OOB"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survOob = data.frame(t(v.obj$survival.oob)[1])
survOob
survOob = data.frame(t(v.obj$survival.oob)[,1])
survOob
survOob = data.frame(t(v.obj$survival.oob)[,1])
survListOob = list()
for(i in 1:ncol(survOob)){
survListOob[[i]] = list(data = as.matrix(cbind(v.obj$time.interest, survOob[,i])), name = paste0("Survival (obs", i, ")"), type = "line")
}
names(survListOob) = NULL
indx = 1:ncol(survOob)
survListOob =  survListOob[indx]
legend = if(input$selectObsSurvOOB == 1){FALSE}else{TRUE}
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival OOB"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survOob = surv.aalen
survOob
survOob = surv.aalen
survListOob = list()
for(i in 1:ncol(survOob)){
survListOob[[i]] = list(data = as.matrix(cbind(v.obj$time.interest, survOob[,i])), name = paste0("Survival (obs", i, ")"), type = "line")
}
names(survListOob) = NULL
indx = 1:ncol(survOob)
survListOob =  survListOob[indx]
legend = if(input$selectObsSurvOOB == 1){FALSE}else{TRUE}
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival OOB"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
v.obj$survival.oob
(v.obj$survival.oob)[,1]
surv.aalen
survOob = data.frame((surv.aalen))
survOob
survOob = data.frame((surv.aalen))
survListOob = list()
for(i in 1:ncol(survOob)){
survListOob[[i]] = list(data = as.matrix(cbind(v.obj$time.interest, survOob[,i])), name = paste0("Survival (obs", i, ")"), type = "line")
}
names(survListOob) = NULL
indx = 1:ncol(survOob)
survListOob =  survListOob[indx]
legend = if(input$selectObsSurvOOB == 1){FALSE}else{TRUE}
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival OOB"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survOob = data.frame((surv.aalen))
survListOob = list()
for(i in 1:ncol(survOob)){
survListOob[[i]] = list(data = as.matrix(cbind(v.obj$time.interest, survOob[,i])), name = "Nelson-Aalen Estimator", type = "line")
}
names(survListOob) = NULL
indx = 1:ncol(survOob)
survListOob =  survListOob[indx]
legend = if(input$selectObsSurvOOB == 1){FALSE}else{TRUE}
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival OOB"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survOob = data.frame((surv.aalen))
survListOob = list()
for(i in 1:ncol(survOob)){
survListOob[[i]] = list(data = as.matrix(cbind(time, survOOb)), name = "Nelson-Aalen Estimator", type = "line")
}
names(survListOob) = NULL
indx = 1:ncol(survOob)
survListOob =  survListOob[indx]
legend = if(input$selectObsSurvOOB == 1){FALSE}else{TRUE}
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival OOB"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survOob = data.frame((surv.aalen))
survListOob = list()
for(i in 1:ncol(survOob)){
survListOob[[i]] = list(data = as.matrix(cbind(v.obj$time.interest, survOob[,i])), name = "Nelson-Aalen Estimator", type = "line")
}
names(survListOob) = NULL
indx = 1:ncol(survOob)
survListOob =  survListOob[indx]
legend = if(input$selectObsSurvOOB == 1){FALSE}else{TRUE}
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival OOB"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survListOob[[i]] = list(data = as.matrix(cbind(v.obj$time.interest, survOob[,i])), name = "Nelson-Aalen Estimator", type = "line")
survListOob
survOob[,1]
survListOob[[i]] = list(data = as.matrix(cbind(time, survOob[,1])), name = "Nelson-Aalen Estimator", type = "line")
survListOob
survOob = data.frame((surv.aalen))
survListOob = list()
for(i in 1:ncol(survOob)){
# survListOob[[i]] = list(data = as.matrix(cbind(v.obj$time.interest, survOob[,i])), name = "Nelson-Aalen Estimator", type = "line")
survListOob[[i]] = list(data = as.matrix(cbind(time, survOob[,1])), name = "Nelson-Aalen Estimator", type = "line")
}
names(survListOob) = NULL
indx = 1:ncol(survOob)
survListOob =  survListOob[indx]
legend = if(input$selectObsSurvOOB == 1){FALSE}else{TRUE}
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival OOB"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survNelsonAalen = data.frame((surv.aalen))
survListOob = list()
survListOob[[1]] = list(data = as.matrix(cbind(time, survNelsonAalen[,1])), name = "Nelson-Aalen Estimator", type = "line")
names(survListOob) = NULL
indx = 1:ncol(survOob)
indx = 1:ncol(survNelsonAalen)
survListOob =  survListOob[indx]
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival OOB"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
survNelsonAalen = data.frame((surv.aalen))
survListOob = list()
# for(i in 1:ncol(survOob)){
# survListOob[[i]] = list(data = as.matrix(cbind(v.obj$time.interest, survOob[,i])), name = "Nelson-Aalen Estimator", type = "line")
survListOob[[1]] = list(data = as.matrix(cbind(time, survNelsonAalen[,1])), name = "Nelson-Aalen Estimator", type = "line")
# }
names(survListOob) = NULL
#
#   indx = 1:ncol(survNelsonAalen)
#
#
#
# survListOob =  survListOob[indx]
# legend = if(input$selectObsSurvOOB == 1){FALSE}else{TRUE}
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival OOB"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
surv.ensb = v.obj$survival
surv.mean.ensb <- rowMeans(surv.ensb, na.rm = TRUE)
surv.mean.ensb
survNelsonAalen <- exp(-cumsum(r))
survEnsemble = v.obj$survival
survMeanEnsemble <- rowMeans(surv.ensb, na.rm = TRUE)
survRandomForest = data.frame(surv.aalen, survMeanEnsemble)
survMeanEnsemble
surv.aalen
survEnsemble = v.obj$survival
survMeanEnsemble <- rowMeans(surv.ensb, na.rm = TRUE)
surv.ensb
survMeanEnsemble
Y
Y
d
survRandomForest = data.frame(survMeanEnsemble)
survListOob = list()
survListOob[[1]] = list(data = as.matrix(cbind(time, survMeanEnsemble[,1])), name = "Nelson-Aalen Estimator", type = "line")
survMeanEnsemble <- rowMeans(surv.ensb, na.rm = TRUE)
time = event.info$time.interest
time
time = v.obj$time.interest
time
survMeanEnsemble
surv.ensb
dim(surv.ensb)
survMeanEnsemble <- colMeans(surv.ensb, na.rm = TRUE)
survMeanEnsemble
survMeanEnsemble <- colMeans(surv.ensb, na.rm = TRUE)
time = event.info$time.interest
survEnsemble = v.obj$survival
Y <- km.obj[, 1]
r <- d/(Y + 1 * (Y == 0))
survNelsonAalen <- exp(-cumsum(r))
survEnsemble = v.obj$survival
survMeanEnsemble <- colMeans(surv.ensb, na.rm = TRUE)
time = event.info$time.interest
survRandomForest = data.frame(surv.aalen, survMeanEnsemble)
survListOob = list()
survNelsonAalen <- exp(-cumsum(r))
survEnsemble = v.obj$survival
survMeanEnsemble <- colMeans(surv.ensb, na.rm = TRUE)
time = event.info$time.interest
survRandomForest = data.frame(survNelsonAalen, survMeanEnsemble)
survListOob = list()
survListOob[[2]] = list(data = as.matrix(cbind(time, survMeanEnsemble[,1])), name = "Overall Ensemble", type = "line")
survRandomForest = data.frame(survNelsonAalen, survMeanEnsemble)
survListOob = list()
survListOob[[1]] = list(data = as.matrix(cbind(time, survNelsonAalen[,1])), name = "Nelson-Aalen Estimator", type = "line")
survNelsonAalen[,1]
survNelsonAalen <- exp(-cumsum(r))
survNelsonAalen
survListOob[[1]] = list(data = as.matrix(cbind(time, survRandomForest[,1])), name = "Nelson-Aalen Estimator", type = "line")
survListOob[[2]] = list(data = as.matrix(cbind(time, survRandomForest[,2])), name = "Overall Ensemble", type = "line")
survListOob
names(survListOob) = NULL
highchart() %>% hc_exporting(enabled = TRUE, filename = "survivalRFOOBPlot") %>%
hc_add_series_list(lst =survListOob) %>%
hc_chart(zoomType = "xy", inverted = FALSE) %>%
hc_xAxis(categories = NULL, title = list(text = "Time")) %>%
hc_yAxis(startOnTick = FALSE, endOnTick = FALSE, title = list(text = "Survival"))%>%
hc_legend(enabled = legend) %>%
hc_tooltip(crosshairs = TRUE, shared = TRUE, headerFormat = "<b>Time: </b>{point.x} <br>") %>%
hc_plotOptions(line = list(tooltip = list(pointFormat = "<b> {series.name}: </b>{point.y:.3f} <br>")),
errorbar = list(tooltip = list(pointFormat = "({point.low} - {point.high})"))) %>%
hc_add_theme(hc_theme_google())
install.packages("~/Downloads/survival_2.39-5.tar.gz", repos = NULL, type = "source")
shiny::runApp("~/Dropbox/GSD/Studies/Web-Tools(Devel)/geneSurv/")
