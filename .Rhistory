functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(
Variables = list(
responseVar = c("mpg"),
categoricalInputs = c("am"),
continuousInputs=c("disp")
),
Statistics = list(
displayDescriptives=TRUE,
# confidenceLevel = 95,
displayCoefficients=TRUE,
correlationMatrix=TRUE,
covarianceMatrix=TRUE,
collinearity=TRUE,
durbinWatson=TRUE,
displayModelFit=TRUE
#alternativeHypothesis = "two.sided"
),  ## end of Statistics list
Options = list(
Store=list(predictions =TRUE,
residuals = TRUE,
standResiduals = TRUE,
stuResiduals=TRUE,
deletedResiduals = TRUE,
leverages =TRUE,
cooksDistance = TRUE,
dFITS = TRUE ),
modelSelection="forward",
enterIf=0.05,
removeIf=0.08
),
Graphs = list(
NULL
),
Reports = list(
NULL
)
) ## end of params list
), # end of Contingency Input list
null = "null", pretty = TRUE)[1]
moduleResults <- runServ(request)
# Panel: Linear Regression Analysis
# Module: LinearRegression
## Örnek uygulama
#HOME_PATH = "/Volumes/My Passport/TURCOSA Project/"
HOME_PATH = "~/Desktop/LinearRegression/"
#HOME_PATH = "~/Desktop/ModuleTests/"
source(paste(file.path(HOME_PATH, "Core", "Global Functions"), "/sourceFromDirectory.R", sep=""))  #load "sourceFromDirectory" function to run following lines.
sourceFromDirectory(file.path(HOME_PATH, "Core", "Global Functions"), ver = NULL)  #load global source files into ".GlobalEnv"
sourceFromDirectory(file.path(HOME_PATH, "Core", "Data Import - Export"), ver = NULL)
sourceFromDirectory(file.path(HOME_PATH, "LinearRegression-55"), ver = NULL)
libraries()  #load global libraries
runServ <- function(request){
toR <- jsonlite:::fromJSON(request)
openSession(toR)
results <- do.call(what = toR$functionName, args = list(input = toR))
return(results)
}
## Verinin yüklenmesi:
{
#fileLoc = "~/Desktop/ModuleTests/Core/Data/testData.txt"
# serviceID = "192.168.1.61",
fileLoc = "~/Desktop/LinearRegression/Core/Data/testData.txt"
#fileLoc = "~/Google Drive/GSD/Şirket/TURCOSA Project/ModuleTests/Core/Data/diamonds.txt"
#fileLoc = "~/Google Drive/GSD/Şirket/TURCOSA Project/ModuleTests/Core/Data/yuzucu.txt"
request <- jsonlite::toJSON(list(requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
port = 6379,
functionName = "importData",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(file = fileLoc,
dec = ",",
header = TRUE,
row.names = NULL,
sep="\t",
fileType = "TXT")
), pretty = TRUE, auto_unbox = TRUE, null = "null", na = "null")[1]
results <- runServ(request)
results <- ImportData:::importData(jsonlite:::fromJSON(request))
# Change Variable types:
request <- jsonlite::toJSON(list(requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
port = 6379,
functionName = "changeVariableProperties",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(
variables = c("mpg", "cyl", "disp", "hp", "drat", "wt", "qsec",
"vs", "am", "gear", "carb"),
types = c("numeric", "factor", "numeric", "numeric", "numeric",
"numeric", "numeric", "factor", "factor", "orderedFactor", "numeric"),
variableNames = NULL
)
), null = "null")[1]
results <- runServ(request)
results <- ImportData:::changeVariableProperties(jsonlite:::fromJSON(request))
# split data
# assign("data", split(session3627$data, session3627$data$am), envir = session3627)
}
#### MANOVA
request <- jsonlite::toJSON(
list(
requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
functionName = "linearRegression",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(
Variables = list(
responseVar = c("mpg"),
categoricalInputs = c("am"),
continuousInputs=c("disp")
),
Statistics = list(
displayDescriptives=TRUE,
# confidenceLevel = 95,
displayCoefficients=TRUE,
correlationMatrix=TRUE,
covarianceMatrix=TRUE,
collinearity=TRUE,
durbinWatson=TRUE,
displayModelFit=TRUE
#alternativeHypothesis = "two.sided"
),  ## end of Statistics list
Options = list(
Store=list(predictions =TRUE,
residuals = TRUE,
standResiduals = TRUE,
stuResiduals=TRUE,
deletedResiduals = TRUE,
leverages =TRUE,
cooksDistance = TRUE,
dFITS = TRUE ),
modelSelection="forward",
enterIf=0.05,
removeIf=0.08
),
Graphs = list(
NULL
),
Reports = list(
NULL
)
) ## end of params list
), # end of Contingency Input list
null = "null", pretty = TRUE)[1]
moduleResults <- runServ(request)
moduleResults
# Panel: Linear Regression Analysis
# Module: LinearRegression
## Örnek uygulama
#HOME_PATH = "/Volumes/My Passport/TURCOSA Project/"
HOME_PATH = "~/Desktop/LinearRegression/"
#HOME_PATH = "~/Desktop/ModuleTests/"
source(paste(file.path(HOME_PATH, "Core", "Global Functions"), "/sourceFromDirectory.R", sep=""))  #load "sourceFromDirectory" function to run following lines.
sourceFromDirectory(file.path(HOME_PATH, "Core", "Global Functions"), ver = NULL)  #load global source files into ".GlobalEnv"
sourceFromDirectory(file.path(HOME_PATH, "Core", "Data Import - Export"), ver = NULL)
sourceFromDirectory(file.path(HOME_PATH, "LinearRegression-55"), ver = NULL)
libraries()  #load global libraries
runServ <- function(request){
toR <- jsonlite:::fromJSON(request)
openSession(toR)
results <- do.call(what = toR$functionName, args = list(input = toR))
return(results)
}
## Verinin yüklenmesi:
{
#fileLoc = "~/Desktop/ModuleTests/Core/Data/testData.txt"
# serviceID = "192.168.1.61",
fileLoc = "~/Desktop/LinearRegression/Core/Data/testData.txt"
#fileLoc = "~/Google Drive/GSD/Şirket/TURCOSA Project/ModuleTests/Core/Data/diamonds.txt"
#fileLoc = "~/Google Drive/GSD/Şirket/TURCOSA Project/ModuleTests/Core/Data/yuzucu.txt"
request <- jsonlite::toJSON(list(requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
port = 6379,
functionName = "importData",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(file = fileLoc,
dec = ",",
header = TRUE,
row.names = NULL,
sep="\t",
fileType = "TXT")
), pretty = TRUE, auto_unbox = TRUE, null = "null", na = "null")[1]
results <- runServ(request)
results <- ImportData:::importData(jsonlite:::fromJSON(request))
# Change Variable types:
request <- jsonlite::toJSON(list(requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
port = 6379,
functionName = "changeVariableProperties",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(
variables = c("mpg", "cyl", "disp", "hp", "drat", "wt", "qsec",
"vs", "am", "gear", "carb"),
types = c("numeric", "factor", "numeric", "numeric", "numeric",
"numeric", "numeric", "factor", "factor", "orderedFactor", "numeric"),
variableNames = NULL
)
), null = "null")[1]
results <- runServ(request)
results <- ImportData:::changeVariableProperties(jsonlite:::fromJSON(request))
# split data
# assign("data", split(session3627$data, session3627$data$am), envir = session3627)
}
#### MANOVA
request <- jsonlite::toJSON(
list(
requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
functionName = "linearRegression",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(
Variables = list(
responseVar = c("mpg"),
categoricalInputs = c("am"),
continuousInputs=c("disp")
),
Statistics = list(
displayDescriptives=TRUE,
# confidenceLevel = 95,
displayCoefficients=TRUE,
correlationMatrix=TRUE,
covarianceMatrix=TRUE,
collinearity=TRUE,
durbinWatson=TRUE,
displayModelFit=TRUE
#alternativeHypothesis = "two.sided"
),  ## end of Statistics list
Options = list(
Store=list(predictions =TRUE,
residuals = TRUE,
standResiduals = TRUE,
stuResiduals=TRUE,
deletedResiduals = TRUE,
leverages =TRUE,
cooksDistance = TRUE,
dFITS = TRUE ),
modelSelection="enter",
enterIf=0.05,
removeIf=0.08
),
Graphs = list(
NULL
),
Reports = list(
NULL
)
) ## end of params list
), # end of Contingency Input list
null = "null", pretty = TRUE)[1]
moduleResults <- runServ(request)
moduleResults
# Panel: Linear Regression Analysis
# Module: LinearRegression
## Örnek uygulama
#HOME_PATH = "/Volumes/My Passport/TURCOSA Project/"
HOME_PATH = "~/Desktop/LinearRegression/"
#HOME_PATH = "~/Desktop/ModuleTests/"
source(paste(file.path(HOME_PATH, "Core", "Global Functions"), "/sourceFromDirectory.R", sep=""))  #load "sourceFromDirectory" function to run following lines.
sourceFromDirectory(file.path(HOME_PATH, "Core", "Global Functions"), ver = NULL)  #load global source files into ".GlobalEnv"
sourceFromDirectory(file.path(HOME_PATH, "Core", "Data Import - Export"), ver = NULL)
sourceFromDirectory(file.path(HOME_PATH, "LinearRegression-55"), ver = NULL)
libraries()  #load global libraries
runServ <- function(request){
toR <- jsonlite:::fromJSON(request)
openSession(toR)
results <- do.call(what = toR$functionName, args = list(input = toR))
return(results)
}
## Verinin yüklenmesi:
{
#fileLoc = "~/Desktop/ModuleTests/Core/Data/testData.txt"
# serviceID = "192.168.1.61",
fileLoc = "~/Desktop/LinearRegression/Core/Data/testData.txt"
#fileLoc = "~/Google Drive/GSD/Şirket/TURCOSA Project/ModuleTests/Core/Data/diamonds.txt"
#fileLoc = "~/Google Drive/GSD/Şirket/TURCOSA Project/ModuleTests/Core/Data/yuzucu.txt"
request <- jsonlite::toJSON(list(requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
port = 6379,
functionName = "importData",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(file = fileLoc,
dec = ",",
header = TRUE,
row.names = NULL,
sep="\t",
fileType = "TXT")
), pretty = TRUE, auto_unbox = TRUE, null = "null", na = "null")[1]
results <- runServ(request)
results <- ImportData:::importData(jsonlite:::fromJSON(request))
# Change Variable types:
request <- jsonlite::toJSON(list(requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
port = 6379,
functionName = "changeVariableProperties",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(
variables = c("mpg", "cyl", "disp", "hp", "drat", "wt", "qsec",
"vs", "am", "gear", "carb"),
types = c("numeric", "factor", "numeric", "numeric", "numeric",
"numeric", "numeric", "factor", "factor", "orderedFactor", "numeric"),
variableNames = NULL
)
), null = "null")[1]
results <- runServ(request)
results <- ImportData:::changeVariableProperties(jsonlite:::fromJSON(request))
# split data
# assign("data", split(session3627$data, session3627$data$am), envir = session3627)
}
#### MANOVA
request <- jsonlite::toJSON(
list(
requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
functionName = "linearRegression",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(
Variables = list(
responseVar = c("mpg"),
categoricalInputs = c("am"),
continuousInputs=c("disp")
),
Statistics = list(
displayDescriptives=TRUE,
# confidenceLevel = 95,
displayCoefficients=TRUE,
correlationMatrix=TRUE,
covarianceMatrix=TRUE,
collinearity=TRUE,
durbinWatson=TRUE,
displayModelFit=TRUE
#alternativeHypothesis = "two.sided"
),  ## end of Statistics list
Options = list(
Store=list(predictions =TRUE,
residuals = TRUE,
standResiduals = TRUE,
stuResiduals=TRUE,
deletedResiduals = TRUE,
leverages =TRUE,
cooksDistance = TRUE,
dFITS = TRUE ),
modelSelection="backward",
enterIf=0.05,
removeIf=0.08
),
Graphs = list(
NULL
),
Reports = list(
NULL
)
) ## end of params list
), # end of Contingency Input list
null = "null", pretty = TRUE)[1]
moduleResults <- runServ(request)
moduleResults
# Panel: Linear Regression Analysis
# Module: LinearRegression
## Örnek uygulama
#HOME_PATH = "/Volumes/My Passport/TURCOSA Project/"
HOME_PATH = "~/Desktop/LinearRegression/"
#HOME_PATH = "~/Desktop/ModuleTests/"
source(paste(file.path(HOME_PATH, "Core", "Global Functions"), "/sourceFromDirectory.R", sep=""))  #load "sourceFromDirectory" function to run following lines.
sourceFromDirectory(file.path(HOME_PATH, "Core", "Global Functions"), ver = NULL)  #load global source files into ".GlobalEnv"
sourceFromDirectory(file.path(HOME_PATH, "Core", "Data Import - Export"), ver = NULL)
sourceFromDirectory(file.path(HOME_PATH, "LinearRegression-55"), ver = NULL)
libraries()  #load global libraries
runServ <- function(request){
toR <- jsonlite:::fromJSON(request)
openSession(toR)
results <- do.call(what = toR$functionName, args = list(input = toR))
return(results)
}
## Verinin yüklenmesi:
{
#fileLoc = "~/Desktop/ModuleTests/Core/Data/testData.txt"
# serviceID = "192.168.1.61",
fileLoc = "~/Desktop/LinearRegression/Core/Data/testData.txt"
#fileLoc = "~/Google Drive/GSD/Şirket/TURCOSA Project/ModuleTests/Core/Data/diamonds.txt"
#fileLoc = "~/Google Drive/GSD/Şirket/TURCOSA Project/ModuleTests/Core/Data/yuzucu.txt"
request <- jsonlite::toJSON(list(requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
port = 6379,
functionName = "importData",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(file = fileLoc,
dec = ",",
header = TRUE,
row.names = NULL,
sep="\t",
fileType = "TXT")
), pretty = TRUE, auto_unbox = TRUE, null = "null", na = "null")[1]
results <- runServ(request)
results <- ImportData:::importData(jsonlite:::fromJSON(request))
# Change Variable types:
request <- jsonlite::toJSON(list(requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
port = 6379,
functionName = "changeVariableProperties",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(
variables = c("mpg", "cyl", "disp", "hp", "drat", "wt", "qsec",
"vs", "am", "gear", "carb"),
types = c("numeric", "factor", "numeric", "numeric", "numeric",
"numeric", "numeric", "factor", "factor", "orderedFactor", "numeric"),
variableNames = NULL
)
), null = "null")[1]
results <- runServ(request)
results <- ImportData:::changeVariableProperties(jsonlite:::fromJSON(request))
# split data
# assign("data", split(session3627$data, session3627$data$am), envir = session3627)
}
#### MANOVA
request <- jsonlite::toJSON(
list(
requestID = 280985,
requestTime = Sys.time(),
sessionID = 3627,
serviceID = NULL,
functionName = "linearRegression",
functionVersion = "1.0",
split = NULL,
localTest = TRUE,
params = list(
Variables = list(
responseVar = c("mpg"),
categoricalInputs = c("am"),
continuousInputs=c("disp")
),
Statistics = list(
displayDescriptives=TRUE,
# confidenceLevel = 95,
displayCoefficients=TRUE,
correlationMatrix=TRUE,
covarianceMatrix=TRUE,
collinearity=TRUE,
durbinWatson=TRUE,
displayModelFit=TRUE
#alternativeHypothesis = "two.sided"
),  ## end of Statistics list
Options = list(
Store=list(predictions =TRUE,
residuals = TRUE,
standResiduals = TRUE,
stuResiduals=TRUE,
deletedResiduals = TRUE,
leverages =TRUE,
cooksDistance = TRUE,
dFITS = TRUE ),
modelSelection="backward",
enterIf=0.05,
removeIf=0.1
),
Graphs = list(
NULL
),
Reports = list(
NULL
)
) ## end of params list
), # end of Contingency Input list
null = "null", pretty = TRUE)[1]
moduleResults <- runServ(request)
moduleResults
shiny::runApp("~/Dropbox/GSD/Studies/Web-Tools(Devel)/compSurv/")
